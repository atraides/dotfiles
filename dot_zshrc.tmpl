{{ $workLaptop := promptStringOnce . "worklaptop" "What is hostname of your work laptop"}}
{{ $globalDomain := promptStringOnce . ".global" "What is domain of your GLOBAL domain" }}
{{ $workDomain := promptStringOnce . ".local" "What is domain of your WORK domain" }}
{{ $workUser := promptStringOnce . "hagyarod" "What is the name of your work username" }}
# vim: syntax=bash
#
# gitignore.io
function gi() { curl -sLw "\n" https://www.toptal.com/developers/gitignore/api/$@ ;}

# Oh My Zsh settings
DISABLE_AUTO_UPDATE="true"
export ZSH=$HOME/.oh-my-zsh

# ZSH_THEME="powerlevel10k/powerlevel10k"
plugins=(history zsh-syntax-highlighting)

## Plugin configuration
if command -v git &>/dev/null; then
  plugins+=("git");
fi

if [[ (-x /usr/bin/grc || -x /usr/local/bin/grc) && -f /etc/grc.zsh ]]; then
  plugins+=("grc");
fi

if [[ -x ${HOME}/.local/bin/poetry ]]; then
  plugins+=("poetry");
fi

if [[ -d ${HOME}/.pyenv ]]; then
  export PYENV_ROOT="${HOME}/.pyenv"
  export PATH="${PYENV_ROOT}/bin:$PATH"
  eval "$(pyenv init --path)"
  plugins+=("pyenv");
fi

if command -v code &>/dev/null; then
  plugins+=("vscode");
fi

if command -v kubectl &>/dev/null; then
  plugins+=("kubectl");
fi

source $ZSH/oh-my-zsh.sh <$TTY

[[ -f ~/.zsh/starship.zsh ]] && source ~/.zsh/starship.zsh
[[ -f ~/.zsh/gpg.zsh ]] && source ~/.zsh/gpg.zsh
if command -v starship &>/dev/null; then
  eval "$(starship init zsh)"
elif [[ -d ${ZSH_CUSTOM:-$HOME/.oh-my-zsh/custom}/themes/powerlevel10k ]]; then
  export ZSH_THEME="powerlevel10k/powerlevel10k"
  # resource oh-my-zsh to activate the theme
  source $ZSH/oh-my-zsh.sh <$TTY

  # Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.zshrc.
  # Initialization code that may require console input (password prompts, [y/n]
  # confirmations, etc.) must go above this block; everything else may go below.
  if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
    source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
  fi
  
# To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
  [[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh
fi

if command -v sagecipher &>/dev/null; then
  export PYTHON_KEYRING_BACKEND=sagecipher.keyring.Keyring
  export KEYRING_PROPERTY_SSH_KEY_FINGERPRINT=$(sagecipher list-keys | awk '{print $2}')
fi

{{- if eq .chezmoi.hostname $workLaptop }}
  sroute() {
    sudo route add 172.28.10.0/24 192.168.183.1
    sudo route add 192.168.42.64/26 192.168.183.1
    sudo route add 10.183.0.0/26 192.168.183.1
    sudo route add 10.15.1.0/24 192.168.183.1
  }

  hroute() {
    sudo route del 172.28.10.0/24
    sudo route del 192.168.42.64/26
    sudo route del 10.183.0.0/26
    sudo route del 10.15.1.0/24
  }
{{- end }}
